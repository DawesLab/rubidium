{"name":"Rubidium D2 Spectrum","tagline":"A numerical model of the Rubidium D2 spectrum implemented in Python","body":"Python code for calculating absorption spectra for the full Rubidium D2-line.\r\n\r\nBased on the paper by Paul Siddons:\r\n*Siddons et al. J. Phys. B: At. Mol. Opt. Phys. 41, 155004 (2008).*\r\n\r\nAlso, heavily inspired by Mathematica code by the same author: \r\nhttp://massey.dur.ac.uk/resources/resources.html \r\nhttp://massey.dur.ac.uk/resources/psiddons/absdisD2.nb\r\n\r\n##Features\r\nFunctions provide calculation of the following:\r\n - Transmission as a function of temperature (T) and detuning (∆).\r\n - Index of refraction *n(∆,T)*\r\n - Group velocity *V<sub>g</sub>(∆,T)*\r\n - Other intermediate parameters: vapor pressure, absorption, etc.\r\n\r\n##Requirements (minimum tested)\r\n\r\n - python (2.7)\r\n - Scipy (0.9.0)\r\n - matplotlib \r\n - numpy\r\n\r\nI recommend using either Anaconda or the Enthought Python Distribution (either free or academic version). This provides the above requirements in one easy-to-install package.\r\n\r\n##Installation & Usage\r\n\r\nThe single-script python code RubidiumD2.py will generate absorption data for a vapor cell at a given temperature (in Kelvin) with length Lc (in meters). The detuning range generated can be set and defaults to -4 GHz through +6 GHz. The script generates a plot using pylab (matplotlib) and saves raw data to an ascii file.\r\n\r\nAn IPython notebook is also included that provides an example workflow.\r\n\r\n##Extending the code\r\n\r\nFunctions from this script can be imported and used in other python code. My intention is to continue to build on these features and maintain a useful python repository for numerical modeling in rubidium vapor systems.\r\n\r\nPlease contribute if you have more ideas and time. If this is useful, leave a comment and let me know what more you would like it to do.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}